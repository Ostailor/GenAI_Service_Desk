services:
  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile.api
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/knowledge/ready"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
  qdrant:
    # Build a custom image to ensure curl is available for the healthcheck.
    build:
      context: .
      dockerfile: Dockerfile.qdrant
    ports:
      - "6333:6333"
    healthcheck:
      # Now that curl is installed via the custom Dockerfile, we can use it.
      test: ["CMD", "curl", "-fsS", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 10s
      retries: 5
      # Give the service more time to initialize before enforcing the health check.
      start_period: 30s
  ollama:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 5

volumes:
  ollama:
