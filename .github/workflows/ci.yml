name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - uses: docker/setup-buildx-action@v2
      - run: docker compose up -d db
      - run: |
          export DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5432/postgres
          alembic -c alembic.ini upgrade head
          python scripts/seed_demo.py
          python scripts/db_health.py
      - run: docker compose down
      - name: Ruff Lint
        run: ruff check .
      - name: Pytest
        run: pytest -q

  llm-tests:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - uses: docker/setup-buildx-action@v2
      - run: docker compose up -d ollama
      - run: pytest tests/llm -q
      - run: docker compose down

  knowledge-tests:
    needs: llm-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - uses: docker/setup-buildx-action@v2
      - run: docker compose up -d --build db qdrant ollama api
      - run: |
          export DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5432/postgres
          alembic -c alembic.ini upgrade head
          python scripts/seed_demo.py
          python scripts/load_docs.py --manifest scripts/demo_docs.json
      - run: pytest tests/knowledge -q
      - run: docker compose down

  smoke:
    needs: llm-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - run: ./smoke.sh
